0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.3.5
3 info using node@v0.10.21
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/asavitzky/.npm/3a52ce78-.lock
10 verbose tar pack [ '/var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz
12 verbose folder .
13 info prepublish paralleljs@0.2.1
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/asavitzky/.npm/1f1177db-tar.lock
16 silly lockFile 1bdaa12d-43222-0-7313950250390917-tmp-tgz tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz
17 verbose lock tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz /Users/asavitzky/.npm/1bdaa12d-43222-0-7313950250390917-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1bdaa12d-43222-0-7313950250390917-tmp-tgz tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz
21 silly lockFile 1bdaa12d-43222-0-7313950250390917-tmp-tgz tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz
22 verbose tar unpack /var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz
23 silly lockFile 0dfc1888-43222-0-7313950250390917-package tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/package
24 verbose lock tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/package /Users/asavitzky/.npm/0dfc1888-43222-0-7313950250390917-package.lock
25 silly lockFile 1bdaa12d-43222-0-7313950250390917-tmp-tgz tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz
26 verbose lock tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz /Users/asavitzky/.npm/1bdaa12d-43222-0-7313950250390917-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry .npmignore
30 silly gunzTarPerm extractEntry README.md
31 silly gunzTarPerm extractEntry LICENSE
32 silly gunzTarPerm extractEntry CONTRIBUTING.md
33 silly gunzTarPerm extractEntry SpecRunner.html
34 silly gunzTarPerm extractEntry lib/Worker.js
35 silly gunzTarPerm extractEntry lib/eval.js
36 silly gunzTarPerm extractEntry lib/parallel.js
37 silly gunzTarPerm extractEntry test/runner.js
38 silly gunzTarPerm extractEntry test/test.js
39 silly gunzTarPerm extractEntry test/jasmine/jasmine-html.js
40 silly gunzTarPerm extractEntry test/jasmine/jasmine.js
41 silly gunzTarPerm extractEntry test/jasmine/MIT.LICENSE
42 silly gunzTarPerm extractEntry test/jasmine/jasmine.css
43 silly gunzTarPerm extractEntry test/specs/api.spec.js
44 silly gunzTarPerm extractEntry test/specs/eval.spec.js
45 silly gunzTarPerm extractEntry test/specs/operations.spec.js
46 silly gunzTarPerm extractEntry test/specs/performance.spec.js
47 silly gunzTarPerm extractEntry test/specs/q-api.spec.js
48 silly gunzTarPerm extractEntry test/specs/worker.spec.js
49 silly lockFile 0dfc1888-43222-0-7313950250390917-package tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/package
50 silly lockFile 0dfc1888-43222-0-7313950250390917-package tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/package
51 silly lockFile 1bdaa12d-43222-0-7313950250390917-tmp-tgz tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz
52 silly lockFile 1bdaa12d-43222-0-7313950250390917-tmp-tgz tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/tmp.tgz
53 verbose tar pack [ '/Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz',
53 verbose tar pack   '/var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/package' ]
54 verbose tarball /Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz
55 verbose folder /var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/package
56 silly lockFile 0dfc1888-43222-0-7313950250390917-package tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/package
57 verbose lock tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/package /Users/asavitzky/.npm/0dfc1888-43222-0-7313950250390917-package.lock
58 silly lockFile 61124bfd-npm-paralleljs-0-2-1-package-tgz tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz
59 verbose lock tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz /Users/asavitzky/.npm/61124bfd-npm-paralleljs-0-2-1-package-tgz.lock
60 silly lockFile 0dfc1888-43222-0-7313950250390917-package tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/package
61 silly lockFile 0dfc1888-43222-0-7313950250390917-package tar:///var/folders/yp/d6sdwdzd7b37x_rtf0jn70ww0000gn/T/npm-3658--J9krUKw/1390337643222-0.7313950250390917/package
62 silly lockFile 61124bfd-npm-paralleljs-0-2-1-package-tgz tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz
63 silly lockFile 61124bfd-npm-paralleljs-0-2-1-package-tgz tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz
64 silly lockFile 16716a46-zky-npm-paralleljs-0-2-1-package /Users/asavitzky/.npm/paralleljs/0.2.1/package
65 verbose lock /Users/asavitzky/.npm/paralleljs/0.2.1/package /Users/asavitzky/.npm/16716a46-zky-npm-paralleljs-0-2-1-package.lock
66 silly lockFile 16716a46-zky-npm-paralleljs-0-2-1-package /Users/asavitzky/.npm/paralleljs/0.2.1/package
67 silly lockFile 16716a46-zky-npm-paralleljs-0-2-1-package /Users/asavitzky/.npm/paralleljs/0.2.1/package
68 verbose tar unpack /Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz
69 silly lockFile 2cb8a43f-zky-npm-paralleljs-0-2-1-package tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package
70 verbose lock tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package /Users/asavitzky/.npm/2cb8a43f-zky-npm-paralleljs-0-2-1-package.lock
71 silly lockFile 61124bfd-npm-paralleljs-0-2-1-package-tgz tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz
72 verbose lock tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz /Users/asavitzky/.npm/61124bfd-npm-paralleljs-0-2-1-package-tgz.lock
73 silly gunzTarPerm modes [ '755', '644' ]
74 silly gunzTarPerm extractEntry package.json
75 silly gunzTarPerm extractEntry .npmignore
76 silly gunzTarPerm extractEntry README.md
77 silly gunzTarPerm extractEntry LICENSE
78 silly gunzTarPerm extractEntry CONTRIBUTING.md
79 silly gunzTarPerm extractEntry SpecRunner.html
80 silly gunzTarPerm extractEntry lib/Worker.js
81 silly gunzTarPerm extractEntry lib/eval.js
82 silly gunzTarPerm extractEntry lib/parallel.js
83 silly gunzTarPerm extractEntry test/runner.js
84 silly gunzTarPerm extractEntry test/test.js
85 silly gunzTarPerm extractEntry test/jasmine/jasmine-html.js
86 silly gunzTarPerm extractEntry test/jasmine/jasmine.js
87 silly gunzTarPerm extractEntry test/jasmine/MIT.LICENSE
88 silly gunzTarPerm extractEntry test/jasmine/jasmine.css
89 silly gunzTarPerm extractEntry test/specs/api.spec.js
90 silly gunzTarPerm extractEntry test/specs/eval.spec.js
91 silly gunzTarPerm extractEntry test/specs/operations.spec.js
92 silly gunzTarPerm extractEntry test/specs/performance.spec.js
93 silly gunzTarPerm extractEntry test/specs/q-api.spec.js
94 silly gunzTarPerm extractEntry test/specs/worker.spec.js
95 silly lockFile 2cb8a43f-zky-npm-paralleljs-0-2-1-package tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package
96 silly lockFile 2cb8a43f-zky-npm-paralleljs-0-2-1-package tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package
97 silly lockFile 61124bfd-npm-paralleljs-0-2-1-package-tgz tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz
98 silly lockFile 61124bfd-npm-paralleljs-0-2-1-package-tgz tar:///Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz
99 verbose chmod /Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz 644
100 verbose chown /Users/asavitzky/.npm/paralleljs/0.2.1/package.tgz [ 501, 20 ]
101 silly lockFile 3a52ce78- .
102 silly lockFile 3a52ce78- .
103 silly publish { name: 'paralleljs',
103 silly publish   version: '0.2.1',
103 silly publish   author: { name: 'Adam Savitzky', email: 'adam.savitzky@gmail.com' },
103 silly publish   contributors:
103 silly publish    [ { name: 'Sebastian Mayr',
103 silly publish        email: 'sebmaster16@gmail.com',
103 silly publish        url: 'http://s3bmaster.blogspot.co.at/' } ],
103 silly publish   description: 'parallel.js enables easy multi-thread processing in javascript',
103 silly publish   main: 'lib/parallel.js',
103 silly publish   repository:
103 silly publish    { type: 'git',
103 silly publish      url: 'https://github.com/adambom/parallel.js.git' },
103 silly publish   directories: { lib: 'lib', test: 'test' },
103 silly publish   keywords:
103 silly publish    [ 'parallel',
103 silly publish      'spawn',
103 silly publish      'map',
103 silly publish      'thread',
103 silly publish      'parallel.js',
103 silly publish      'workers',
103 silly publish      'webworkers' ],
103 silly publish   devDependencies: { 'jasmine-node': 'x', q: 'x' },
103 silly publish   license: 'BSD',
103 silly publish   scripts: { test: 'jasmine-node --verbose test/specs' },
103 silly publish   engines: { node: '>=0.9.10' },
103 silly publish   testling:
103 silly publish    { scripts:
103 silly publish       [ 'test/lib/jasmine/jasmine.js',
103 silly publish         'test/specs/*.js',
103 silly publish         'test/runner.js' ] },
103 silly publish   readme: 'Parallel.js\n===========\n\n### Parallel Computing with Javascript\n*******\n\n\nParallel.js is a simple library for parallel computing in Javascript, either in Node.js or in the Web Browser.\nParallel takes advantage of Web Workers for the web, and child processes for Node.\n\n# Installation\nYou can download the raw javascript file [here](https://raw.github.com/adambom/parallel.js/master/lib/parallel.js)\n\nJust include it via a script tag in your HTML page\n\nParallel.js is also available as a node module:\n\n```bash\nnpm install paralleljs\n```\n\n# Usage\n\n#### `Parallel(data, opts)`\nThis is the constructor. Use it to new up any parallel jobs. The constructor takes an array of data you want to\noperate on. This data will be held in memory until you finish your job, and can be accessed via the `.data` attribute\nof your job.\n\nThe object returned by the `Parallel` constructor is meant to be chained, so you can produce a chain of \noperations on the provided data.\n\n*Arguments*\n* `data`: This is the data you wish to operate on. Will often be an array, but the only restrictions are that your values are serializable as JSON.\n* `options` (optional): Some options for your job\n  * `evalPath` (optional): This is the path to the file eval.js. This is required when running in node, and required for some browsers (IE 10) in order to work around cross-domain restrictions for web workers. Defaults to the same location as parallel.js in node environments, and `null` in the browser.\n  * `maxWorkers` (optional): The maximum number of permitted worker threads. This will default to 4, or the number of cpus on your computer if you\'re running node\n  * `synchronous` (optional): If webworkers are not available, whether or not to fall back to synchronous processing using `setTimeout`. Defaults to `true`.\n\n*Example*\n```javascript\nvar p = new Parallel([1, 2, 3, 4, 5]);\n\nconsole.log(p.data); // prints [1, 2, 3, 4, 5]\n```\n\n*******\n\n#### `spawn(fn)`\nThis function will spawn a new process on a worker thread. Pass it the function you want to call. Your\nfunction will receive one argument, which is the current data. The value returned from your spawned function will\nupdate the current data.\n\n*Arguments*\n* `fn`: A function to execute on a worker thread. Receives the wrapped data as an argument. The value returned will be assigned to the wrapped data.\n\n*Example*\n```javascript\nvar p = new Parallel(\'forwards\');\n\n// Spawn a remote job (we\'ll see more on how to use then later)\np.spawn(function (data) {\n  data = data.reverse();\n  \n  console.log(data); // logs sdrawrof\n  \n  return data;\n}).then(function (data) {\n  console.log(data) // logs sdrawrof\n});\n```\n\n*******\n\n#### `map(fn)`\nMap will apply the supplied function to every element in the wrapped data. Parallel will spawn one worker for\neach array element in the data, or the supplied maxWorkers argument. The values returned will be stored for \nfurther processing.\n\n*Arguments*\n* `fn`: A function to apply. Receives the wrapped data as an argument. The value returned will be assigned to the wrapped data.\n\n*Example*\n```javascript\nvar p = new Parallel([0, 1, 2, 3, 4, 5, 6]),\n    log = function () { console.log(arguments); };\n\n// One gotcha: anonymous functions cannot be serialzed\n// If you want to do recursion, make sure the function\n// is named appropriately\nfunction fib(n) {\n  return n < 2 ? 1 : fib(n - 1) + fib(n - 2);\n};\n    \np.map(fib).then(log)\n\n// Logs the first 7 Fibonnaci numbers, woot!\n```\n\n*******\n\n#### `reduce(fn)`\nReduce applies an operation to every member of the wrapped data, and returns a scalar value produced by the operation.\nUse it for combining the results of a map operation, by summing numbers for example. This takes a reducing function,\nwhich gets an argument, `data`, an array of the stored value, and the current element.\n\n*Arguments*\n* `fn`: A function to apply. Receives the stored value and current element as argument. The value returned will be stored as the current value for the next iteration. Finally, the current value will be assigned to current data.\n\n*Example*\n```javascript\nvar p = new Parallel([0, 1, 2, 3, 4, 5, 6, 7, 8]);\n\nfunction add(d) { return d[0] + d[1]; }\nfunction factorial(n) { return n < 2 ? 1 : n * factorial(n - 1); }\nfunction log() { console.log(arguments); }\n\np.require(factorial)\n\n// Approximate e^10\np.map(function (n) { return Math.pow(10, n); }).reduce(add).then(log);\n```\n\n*******\n\n#### `then(success, fail)`\nThe functions given to `then` are called after the last requested operation has finished.\n`success` receives the resulting data object, while `fail` will receive an error object.\n\n*Arguments*\n- `success`: A function that gets called upon succesful completion. Receives the wrapped data as an argument.\n- `failure` (optional): A function that gets called if the job fails. The function is passed an error object.\n\n*Example*\n```javascript\nvar p = new Parallel([1, 2, 3]);\n\nfunction dbl(n) { return n * 2; }\n\np.map(dbl).map(dbl).map(dbl).then(function (data) {\n  console.log(data); // logs [8, 16, 24]\n});\n\n// Approximate e^10\np.map(function (n) { return Math.pow(10, n) / factorial(n); }).reduce(add).then(log);\n```\n\n*******\n\n#### `require(state)`\nIf you have state that you want to share between your main thread and the worker threads, this is how. Require\ntakes either a string or a function. A string should point to a file name. Note that in order to\nuse ```require``` with a file name as an argument, you have to provide the evalPath property in the options\nobject.\n\n*Example*\n```javascript\nvar p = new Parallel([1, 2, 3], { evalPath: \'https://raw.github.com/adambom/parallel.js/master/lib/eval.js\' });\n\nfunction cubeRoot(n) { return Math.pow(n, 1 / 3); }\n\n// Require a function\np.require(cubeRoot);\n\n// Require a file\np.require(\'blargh.js\');\n\np.map(function (d) {\n  return blargh(20 * cubeRoot(d));\n});\n```\n\n# Compatibility\n[![browser support](https://ci.testling.com/adambom/parallel.js.png)](https://ci.testling.com/adambom/parallel.js)\n',
103 silly publish   readmeFilename: 'README.md',
103 silly publish   bugs: { url: 'https://github.com/adambom/parallel.js/issues' },
103 silly publish   _id: 'paralleljs@0.2.1',
103 silly publish   dist: { shasum: 'ebca745d3e09c01e2bebcc14858891ff4510e926' },
103 silly publish   _from: '.' }
104 verbose url raw paralleljs
105 verbose url resolving [ 'https://registry.npmjs.org/', './paralleljs' ]
106 verbose url resolved https://registry.npmjs.org/paralleljs
107 info trying registry request attempt 1 at 12:54:03
108 http PUT https://registry.npmjs.org/paralleljs
109 http 409 https://registry.npmjs.org/paralleljs
110 verbose url raw paralleljs
111 verbose url resolving [ 'https://registry.npmjs.org/', './paralleljs' ]
112 verbose url resolved https://registry.npmjs.org/paralleljs
113 info trying registry request attempt 1 at 12:54:04
114 http GET https://registry.npmjs.org/paralleljs
115 http 200 https://registry.npmjs.org/paralleljs
116 error publish fail Cannot publish over existing version.
116 error publish fail Update the 'version' field in package.json and try again.
116 error publish fail
116 error publish fail If the previous version was published in error, see:
116 error publish fail     npm help unpublish
116 error publish fail
116 error publish fail To automatically increment version numbers, see:
116 error publish fail     npm help version
117 error System Darwin 13.0.0
118 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
119 error cwd /Users/asavitzky/code/parallel.js
120 error node -v v0.10.21
121 error npm -v 1.3.5
122 error code EPUBLISHCONFLICT
123 verbose exit [ 1, true ]
